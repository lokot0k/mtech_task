version: '3.10'
services:

  db:
    container_name: db
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    image: postgres:14-alpine
    networks:
      - network
    ports:
      - ${HOST_DB_PORT}:${DB_PORT}
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build:
      context: backend/
      dockerfile: docker/Dockerfile
    container_name: mtech_backend
    depends_on:
      - db
    env_file:
      - backend/${ENV_FILE}
    networks:
      - network
    ports:
      - ${HOST_BACKEND_PORT}:${BACKEND_PORT}
      
  client:
    build:
      context: client/
      dockerfile: Dockerfile
    container_name: mtech_client
    depends_on:
      - backend
    networks:
      - network

  background:
    build:
      context: background/
      dockerfile: Dockerfile
    container_name: mtech_background
    depends_on:
      - backend
    networks:
      - network
    volumes:
      - background_data:/shared/data


networks:
  network:
    driver: bridge

volumes:
  db_data:
  background_data:
